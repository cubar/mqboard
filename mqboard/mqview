#! /usr/bin/env python3
# MQBoard - Command Line Interface
# Copyright Â© 2020 by Thorsten von Eicken.

import os, sys, posixpath, random, base64, logging, struct, time, hashlib  # noqa
import click
import paho.mqtt.client as paho

logging.basicConfig(level=logging.WARNING)
log = logging.getLogger("mqboard")
log.setLevel(logging.INFO)


@click.command()
@click.option(
    "--server",
    "-s",
    envvar="MQBOARD_SERVER",
    required=False,
    default="localhost",
    help="MQTT server hostname or IP address, default localhost or MQBOARD_SERVER env var.",
    metavar="SERVER",
)
@click.option(
    "--port",
    "-p",
    envvar="MQBOARD_PORT",
    required=False,
    type=click.INT,
    help="MQTT server port, default 1883 (non-TLS) or 8883 (TLS) or MQBOARD_PORT env var.",
    metavar="PORT",
)
@click.option(
    "--tls/--no-tls",
    envvar="MQBOARD_TLS",
    required=False,
    default=False,
    help="enable TLS, default false or MQBOARD_TLS env var.",
    metavar="PSK",
)
@click.option(
    "--prefix",
    "-p",
    envvar="MQBOARD_PREFIX",
    required=False,
    type=click.STRING,
    help="MQTT topic prefix (just before '/log'), default None or MQBOARD_PREFIX env var.",
    metavar="PREFIX",
)
@click.option(
    "--topic",
    "-t",
    envvar="MQBOARD_TOPIC",
    required=False,
    type=click.STRING,
    help="MQTT topic, default None or MQBOARD_TOPIC env var.",
    metavar="TOPIC",
)
@click.version_option()
def cli(server, port, tls, prefix, topic):
    """mqview - MQTT MicroPython log viewer
    """
    global _mqclient

    # get a connection to the MQTT server going
    if not port:
        port = 8883 if tls else 1883
    _mqclient = paho.Client(clean_session=True)
    _mqclient.enable_logger(logging.getLogger("paho-mqtt"))
    if tls:
        _mqclient.tls_set()

    if not topic or topic == "":
        if not prefix or prefix == "":
            print("--prefix or --topic are required", file=sys.stderr)
            sys.exit(1)
        topic = prefix + "/log"

    exit_code = None
    is_conn = False

    def on_log(cli, ud, msg):
      try:
        m = msg.payload.decode("utf-8")
        if len(m) < 4:
            print(m)
            return
        pref = {"C ": 35, "E ": 31, "W ": 33, "I ": 32, "D ": 2}.get(m[:2], 0)
        print("\033[%dm%s\033[0m" % (pref, m))
      except:  # noqa
        on_log(cli, ud, msg[1:])  # peel off first byte

    def on_conn(cli, ud, fl, rc):
        nonlocal is_conn
        if rc != 0:
            raise click.UsageError(paho.connack_string(rc))
        log.info("Connected, subscribing to %s", topic)
        _mqclient.subscribe(topic, qos=1)
        _mqclient.message_callback_add(topic, on_log)
        is_conn = True

    log.debug("Connecting to {}:{}".format(server, port))
    _mqclient.on_connect = on_conn
    _mqclient.connect(server, port)
    while not is_conn:
        _mqclient.loop(0.2)
    while exit_code is None:
        _mqclient.loop(0.2)
    sys.exit(exit_code)


if __name__ == "__main__":
    cli()
